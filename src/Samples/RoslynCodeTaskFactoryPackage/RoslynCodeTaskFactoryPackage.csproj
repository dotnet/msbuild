<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <UseProductOutputPath>true</UseProductOutputPath>
    <CopyNuGetImplementations>false</CopyNuGetImplementations>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <TargetFrameworks>$(LibraryTargetFrameworks)</TargetFrameworks>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(NetCoreBuild)' == 'true'">
    <StartAction Condition="'$(StartAction)'==''">Program</StartAction>
  </PropertyGroup>

  <!-- Define a custom task using the built-in RoslynCodeTaskFactory -->
  <UsingTask
    TaskName="BuiltInRoslynTask"
    TaskFactory="RoslynCodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
    <ParameterGroup>
      <Message ParameterType="System.String" Required="true" />
      <Result ParameterType="System.String" Output="true" />
    </ParameterGroup>
    <Task>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
        string processedMessage = "Built-in RoslynCodeTaskFactory processed: " + Message;
        Log.LogMessage(MessageImportance.High, processedMessage);
        Result = processedMessage;
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <!-- Test target that uses the custom task -->
  <Target Name="TestBuiltInRoslynTask" BeforeTargets="Build">
    <Message Text="=== Testing Built-in RoslynCodeTaskFactory ===" Importance="high" />
    <BuiltInRoslynTask Message="Hello from built-in RoslynCodeTaskFactory!">
      <Output TaskParameter="Result" PropertyName="TaskResult" />
    </BuiltInRoslynTask>
    <Message Text="Task result: $(TaskResult)" Importance="high" />
    <Message Text="This task is counted as 'RoslynCodeTaskFactory' in telemetry." Importance="high" />
  </Target>

</Project>