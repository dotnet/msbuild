trigger:
- main
- vs*

# If defined here, these values are not overrideable
# Once they exist, we should define these as "runtime parameters"
# https://github.com/Microsoft/azure-pipelines-yaml/pull/129
# variables:
#   SignType: real
#   SkipApplyOptimizationData: false

parameters:
- name: OptProfDropName
  displayName: Optional OptProfDrop Override
  type: string
  default: 'default'
- name: EnableOptProf
  displayName: Enable OptProf data collection for this build
  type: boolean
  default: true
- name: requireDefaultChannelsEnabled
  displayName: Require Default Channels
  type: boolean
  default: true

variables:
  # if OptProfDrop is not set, string '$(OptProfDrop)' will be passed to the build script.
  - name: OptProfDrop
    value: ''
  - name: requireDefaultChannels
    value: false
  - name: SourceBranch
    value: $(IbcSourceBranchName)
  # If we're not on a vs* branch, use main as our optprof collection branch
  - ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/heads/vs')) }}:
    - name: SourceBranch
      value: main
  # if OptProfDropName is set as a parameter, set OptProfDrop to the parameter and unset SourceBranch
  - ${{ if ne(parameters.OptProfDropName, 'default') }}:
    - name: OptProfDrop
      value: ${{parameters.OptProfDropName}}
    - name: SourceBranch
      value: ''
  # Override SkipApplyOptimizationData to true when disabling OptProf data collection
  - ${{ if eq(parameters.EnableOptProf, false) }}:
    - name: SkipApplyOptimizationData
      value: true
  - ${{ if and(not(startsWith(variables['Build.SourceBranch'], 'refs/heads/exp/')), not(startsWith(variables['Build.SourceBranch'], 'refs/heads/perf/'))) }}:
    - name: requireDefaultChannels
      value: ${{ parameters.requireDefaultChannelsEnabled }}
  - name: EnableReleaseOneLocBuild
    value: true # Enable loc for vs17.14
  - name: Codeql.Enabled
    value: true
  - group: DotNet-MSBuild-SDLValidation-Params
  - group: AzureDevOps-Artifact-Feeds-Pats
  - name: cfsNugetWarnLevel
    value: warn
  - name: nugetMultiFeedWarnLevel
    value: none
  - name: NugetSecurityAnalysisWarningLevel
    value: none

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    featureFlags:
      autoBaseline: true
    pool:
      name: VSEngSS-MicroBuild2022-1ES
      os: windows
    sdl:
      policheck:
        enabled: true
        exclusionsFile: $(Build.SourcesDirectory)\eng\policheck_exclusions.xml
      tsa:
        enabled: true
      # We generate SBOM ourselves, so don't need steps injected by 1ES.
      sbom:
        enabled: false
      codeSignValidation:
        enabled: true
        break: true
        additionalTargetsGlobPattern: -|**\bootstrapper\**\vs_enterprise.exe
      credscan:
        suppressionsFile: $(Build.SourcesDirectory)/eng/CredScanSuppressions.json

    stages:
    - stage: build
      displayName: Build
      jobs:
      - template: /azure-pipelines/.vsts-dotnet-build-jobs.yml@self
        parameters:
          isExperimental: false
          enableLocalization: true
          enableComponentGovernance: true
          enableSigningValidation: true
