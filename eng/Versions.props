<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->
<Project>
  <PropertyGroup>
    <VersionPrefix>17.12.0</VersionPrefix>
    <PackageValidationBaselineVersion>17.11.0-preview-24318-05</PackageValidationBaselineVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
    <PreReleaseVersionLabel>preview</PreReleaseVersionLabel>
    <DotNetUseShippingVersions>true</DotNetUseShippingVersions>
    <!-- Workaround for https://github.com/dotnet/roslyn/issues/35793 -->
    <SemanticVersioningV1>true</SemanticVersioningV1>
    <MicroBuildPluginsSwixBuildVersion>1.1.87</MicroBuildPluginsSwixBuildVersion>
  </PropertyGroup>
  <!-- Repo Toolset Features -->
  <PropertyGroup>
    <UsingToolIbcOptimization>true</UsingToolIbcOptimization>
    <UsingToolVisualStudioIbcTraining>true</UsingToolVisualStudioIbcTraining>
    <UsingToolMicrosoftNetCompilers>true</UsingToolMicrosoftNetCompilers>
    <UsingToolSymbolUploader>true</UsingToolSymbolUploader>
    <UsingToolVSSDK>true</UsingToolVSSDK>
    <!-- Override Arcade's default VSSDK version with one that supports client enablement.
         Can be removed after Arcade moves up. -->
    <MicrosoftVSSDKBuildToolsVersion>16.7.13</MicrosoftVSSDKBuildToolsVersion>
  </PropertyGroup>
  <!-- Production Dependencies -->
  <PropertyGroup>
    <SystemCollectionsImmutableVersion>8.0.0</SystemCollectionsImmutableVersion>
    <SystemConfigurationConfigurationManagerVersion>8.0.0</SystemConfigurationConfigurationManagerVersion>
    <SystemFormatsAsn1Version>8.0.1</SystemFormatsAsn1Version>
    <!--
        Modifying the version of System.Memory is very high impact and causes downstream breaks in third-party tooling that uses the MSBuild API.
        When updating the version of System.Memory file a breaking change here: https://github.com/dotnet/docs/issues/new?assignees=gewarren&labels=breaking-change%2CPri1%2Cdoc-idea&template=breaking-change.yml&title=%5BBreaking+change%5D%3A+
        and follow the guidelines written here (internal-link): https://dev.azure.com/devdiv/DevDiv/_wiki/wikis/DevDiv.wiki/1796/How-to-add-a-Known-Issue
    -->
    <SystemMemoryVersion>4.5.5</SystemMemoryVersion>
    <SystemNetHttpVersion>4.3.4</SystemNetHttpVersion>
    <SystemReflectionMetadataLoadContextVersion>8.0.0</SystemReflectionMetadataLoadContextVersion>
    <SystemReflectionMetadataVersion>8.0.0</SystemReflectionMetadataVersion>
    <SystemResourcesExtensionsVersion>8.0.0</SystemResourcesExtensionsVersion>
    <SystemSecurityPrincipalWindowsVersion>5.0.0</SystemSecurityPrincipalWindowsVersion>
    <SystemTextEncodingCodePagesVersion>7.0.0</SystemTextEncodingCodePagesVersion>
    <SystemTextJsonVersion>8.0.4</SystemTextJsonVersion>
    <SystemThreadingChannelsVersion>8.0.0</SystemThreadingChannelsVersion>
    <SystemThreadingTasksDataflowVersion>8.0.0</SystemThreadingTasksDataflowVersion>
  </PropertyGroup>
  <!-- Toolset Dependencies -->
  <PropertyGroup>
    <!-- DotNetCliVersion MUST match the dotnet version in global.json.
         Otherwise, this version of dotnet will not be installed and the build will error out. -->
    <DotNetCliVersion>$([System.Text.RegularExpressions.Regex]::Match($([System.IO.File]::ReadAllText('$(MSBuildThisFileDirectory)..\global.json')), '"dotnet": "([^"]*)"').Groups.get_Item(1))</DotNetCliVersion>
    <MicrosoftCodeAnalysisCollectionsVersion>4.2.0-1.22102.8</MicrosoftCodeAnalysisCollectionsVersion>
    <MicrosoftDotNetXUnitExtensionsVersion>8.0.0-beta.24311.3</MicrosoftDotNetXUnitExtensionsVersion>
    <MicrosoftExtensionsDependencyModelVersion>7.0.0</MicrosoftExtensionsDependencyModelVersion>
    <MicrosoftIORedistVersion>6.0.1</MicrosoftIORedistVersion>
    <MicrosoftNetCompilersToolsetVersion>4.11.0-3.24352.5</MicrosoftNetCompilersToolsetVersion>
    <NuGetBuildTasksVersion>6.11.0-rc.122</NuGetBuildTasksVersion>
    <SystemRuntimeCompilerServicesUnsafeVersion>6.0.0</SystemRuntimeCompilerServicesUnsafeVersion>
  </PropertyGroup>
  <Target Name="OverrideArcadeFileVersion" AfterTargets="_InitializeAssemblyVersion">
    <!-- See https://github.com/dotnet/arcade/issues/3386

         Arcade doesn't support this directly; AutoGenerateAssemblyVersion
         set to false means that FileVersion=$(AssemblyVersion), but that's
         not ok for MSBuild because we have a fixed AssemblyVersion for
         compat (15.1.0.0), but varied FileVersion, which is user-visible
         via $(MSBuildVersion) and msbuild -version.

         So: we want this to match the NuGet package version and also the
         AssemblyInformationalVersion. Jump through hoops to do so.
         -->
    <PropertyGroup>
      <FileVersion>$(VersionPrefix).$(FileVersion.Split('.')[3])</FileVersion>
    </PropertyGroup>
  </Target>
</Project>
